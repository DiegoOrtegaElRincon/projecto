{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alumno\\\\Documents\\\\React-Project\\\\Projecto\\\\src\\\\components\\\\ytembed\\\\YoutubeEmbed.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./YoutubeEmbed.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YoutubeEmbed = _ref => {\n  let {\n    embedId\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-responsive\",\n    children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n      width: \"1280\",\n      height: \"720\",\n      src: `https://www.youtube.com/embed/${embedId}`,\n      frameBorder: \"0\",\n      allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n      allowFullScreen: true,\n      title: \"Embedded youtube\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = YoutubeEmbed;\nYoutubeEmbed.propTypes = {\n  embedId: PropTypes.string.isRequired\n};\nexport default YoutubeEmbed;\nvar _c;\n$RefreshReg$(_c, \"YoutubeEmbed\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","YoutubeEmbed","_ref","embedId","className","children","width","height","src","frameBorder","allow","allowFullScreen","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","string","isRequired","$RefreshReg$"],"sources":["C:/Users/Alumno/Documents/React-Project/Projecto/src/components/ytembed/YoutubeEmbed.js"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./YoutubeEmbed.css\";\r\n\r\nconst YoutubeEmbed = ({ embedId }) => (\r\n    <div className=\"video-responsive\">\r\n        <iframe\r\n            width=\"1280\"\r\n            height=\"720\"\r\n            src={`https://www.youtube.com/embed/${embedId}`}\r\n            frameBorder=\"0\"\r\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n            allowFullScreen\r\n            title=\"Embedded youtube\"\r\n        />\r\n    </div>\r\n);\r\n\r\nYoutubeEmbed.propTypes = {\r\n    embedId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default YoutubeEmbed;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,YAAY,GAAGC,IAAA;EAAA,IAAC;IAAEC;EAAQ,CAAC,GAAAD,IAAA;EAAA,oBAC7BF,OAAA;IAAKI,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAC7BL,OAAA;MACIM,KAAK,EAAC,MAAM;MACZC,MAAM,EAAC,KAAK;MACZC,GAAG,EAAG,iCAAgCL,OAAQ,EAAE;MAChDM,WAAW,EAAC,GAAG;MACfC,KAAK,EAAC,0FAA0F;MAChGC,eAAe;MACfC,KAAK,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAC1B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAAA,CACT;AAACC,EAAA,GAZIhB,YAAY;AAclBA,YAAY,CAACiB,SAAS,GAAG;EACrBf,OAAO,EAAEL,SAAS,CAACqB,MAAM,CAACC;AAC9B,CAAC;AAED,eAAenB,YAAY;AAAC,IAAAgB,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}